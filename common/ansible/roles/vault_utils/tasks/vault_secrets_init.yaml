---
- include_tasks: pre_check.yaml

- name: Is secrets backend already enabled
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: >
      sh -e -c "vault secrets list | grep -e '^{{ vault_base_path }}'"
  register: secrets_enabled
  failed_when: false

- name: Create secrets backend kv-v2
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: vault secrets enable -path="{{ vault_base_path }}" kv-v2
  when: secrets_enabled.rc != 0

- name: Is kubernetes backend already enabled
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: >
      sh -e -c "vault auth list | grep -e '^kubernetes'"
  register: kubernetes_enabled
  failed_when: false

- name: Enable kubernetes backend on hub
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: "vault auth enable kubernetes"
  when: kubernetes_enabled.rc != 0

- name: Read ServiceAccount Token
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: cat /var/run/secrets/kubernetes.io/serviceaccount/token
  register: sa_token
  when: kubernetes_enabled.rc != 0

- name: Write auth
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: "vault write auth/kubernetes/config
      issuer=\"https://kubernetes.default.svc.cluster.local\"
      token_reviewer_jwt=\"{{ sa_token.stdout }}\"
      kubernetes_host=\"https://kubernetes.default.svc.cluster.local:443\"
      kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
  when: kubernetes_enabled.rc != 0

- name: Copy license.json to {{ vault_pod }}
  kubernetes.core.k8s_cp:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    remote_path: /tmp/license.json
    local_path: "{{ playbook_dir }}/{{ license_path }}"

- name: Add license to vault
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: sh -e -c "vault kv put -mount=secret kubernetes license=@/tmp/license.json"
  register: add_license
  failed_when: add_license.rc != 0

- name: Configure policy template for hub
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: >
      sh -e -c "echo \"path \\\"secret/data/kubernetes\\\" { capabilities = {{ vault_hub_capabilities }} }\" > /tmp/policy-kubernetes.hcl"

- name: Configure policy for hub
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: "vault policy write {{ external_secrets_sa }} /tmp/policy-kubernetes.hcl"

- name: Configure kubernetes role for hub
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_ns }}"
    pod: "{{ vault_pod }}"
    command: >
      vault write auth/kubernetes/role/"{{ external_secrets_sa }}"
        bound_service_account_names="{{ external_secrets_sa }}"
        bound_service_account_namespaces="{{ external_secrets_ns }}"
        policies="default,{{ external_secrets_sa }}" ttl="{{ vault_hub_ttl }}"
